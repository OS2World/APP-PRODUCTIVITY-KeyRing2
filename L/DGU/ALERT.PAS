{***************************************************************************
* Filename: ~modname~
* Version:  ~version~
* Date:     ~date~ @ ~time~
* Group:    ~group~
* Release:  ~release~
* ----------------------------
*
* Modifications
* -------------
*
* Version   Date     Time    Programmer   Description
* ~log~
*
*
* ~notes~
* Description
* -----------
* warning dialogs
*
* ~notesend~
*
***************************************************************************

}
{$R-,S-,I-,V-,B-}

UNIT ALERT;

INTERFACE

    {$I OPDEFINE.INC}
USES
    OpCRT,
    OpEntry,
    OpWindow;


    {Entry field constants}
CONST
    idMsg          = 0;

    {Help index constants}
CONST
    hiMsg          = 1;


FUNCTION InitEntryScreen(VAR ES         : EntryScreen;
                         Hdr            : STRING;
                         VAR Msg        : STRING;
                         VAR Msg2       : STRING;
                         VAR Msg3       : STRING;
                         VAR Msg4       : STRING;
                         VAR Msg5       : STRING;
                         VAR Msg6       : STRING;
                         VAR EsColors   : ColorSet) : WORD;
    {-Initialize entry screen generated by MAKESCRN}


    {===========================================================}

IMPLEMENTATION
USES
    Colors,
    Dos,
    OpInline,
    OpString,
    OpRoot,
    OpColor,
    {$IFDEF UseMouse}
    OpMouse,
    {$ENDIF}
    OpAbsFld,
    OpCmd,
    OpField,
    OpFrame,
    OpSelect;

    (****************************************************************************)

    FUNCTION InitEntryScreen(VAR ES         : EntryScreen;
                             Hdr            : STRING;
                             VAR Msg        : STRING;
                             VAR Msg2       : STRING;
                             VAR Msg3       : STRING;
                             VAR Msg4       : STRING;
                             VAR Msg5       : STRING;
                             VAR Msg6       : STRING;
                             VAR EsColors   : ColorSet) : WORD;
    CONST
        Frame1         = 'ÚÀ¿ÙÄÄ³³';
        WinOptions     = wBordered + wClear + wUserContents;
        Lc             : BYTE = 6;
        Rc             : BYTE = 73;
    VAR
        StrLen         : BYTE;
        MinWidth       : BYTE;
        HdrLen,
        MsgLen         : BYTE;
        cTemp          : CHAR;
        noMsgs         : BYTE;
    BEGIN

        noMsgs := 1;
        IF Msg2 <> '' THEN
            noMsgs := 2;
        IF Msg3 <> '' THEN
            noMsgs := 3;
        IF Msg4 <> '' THEN
            noMsgs := 4;
        IF Msg5 <> '' THEN
            noMsgs := 5;
        IF Msg6 <> '' THEN
            noMsgs := 6;

        Hdr := Trim(Hdr);
        IF LENGTH(Hdr) > 0 THEN
            Hdr := ' ' + Trim(Hdr) + ' ';
        HdrLen := LENGTH(Hdr);
        MsgLen := LENGTH(Msg) + 2; {for space on each side}
        IF (LENGTH(Msg2) + 2) > MsgLen THEN
            MsgLen := LENGTH(Msg2) + 2;
        IF (LENGTH(Msg3) + 2) > MsgLen THEN
            MsgLen := LENGTH(Msg3) + 2;
        IF (LENGTH(Msg4) + 2) > MsgLen THEN
            MsgLen := LENGTH(Msg4) + 2;
        IF (LENGTH(Msg5) + 2) > MsgLen THEN
            MsgLen := LENGTH(Msg5) + 2;
        IF (LENGTH(Msg6) + 2) > MsgLen THEN
            MsgLen := LENGTH(Msg6) + 2;

        IF MsgLen > HdrLen THEN
            MinWidth := MsgLen
        ELSE
            MinWidth := HdrLen;

        IF MinWidth < 30 THEN
            MinWidth := 30;

        Lc := (ScreenWidth - MinWidth) DIV 2;
        Rc := Lc + MinWidth - 1;


        WITH ES DO BEGIN
            IF NOT InitCustom(Lc, 11, Rc, 12 + noMsgs, EsColors, WinOptions) THEN BEGIN
                InitEntryScreen := InitStatus;
                EXIT;
            END;


            wFrame.SetFrameType(Frame1);
            wFrame.AddShadow(shBR, shSeeThru);
            wFrame.AddHeader(' Press any key to continue ', heBC);
            esOptionsOff(esMousePage);
            SetWrapMode(ExitAtEdges);
            IF HdrLen > 0 THEN
                wFrame.AddHeader(Hdr, heTC);

            AddCenteredTextField(
                Msg, 2);
            IF noMsgs >= 2 THEN
                AddCenteredTextField(
                    Msg2, 3);
            IF noMsgs >= 3 THEN
                AddCenteredTextField(
                    Msg3, 4);
            IF noMsgs >= 4 THEN
                AddCenteredTextField(
                    Msg4, 5);
            IF noMsgs >= 5 THEN
                AddCenteredTextField(
                    Msg5, 6);
            IF noMsgs >= 6 THEN
                AddCenteredTextField(
                    Msg6, 7);

            {apparently we need some kind of field to avoid an exec error}
            cTemp := ' ';
            AddCharField('', 1, 1, '!', 1, 1, 0, 'A', 'Z', cTemp);

            InitEntryScreen := RawError;
        END;
    END;

END.
