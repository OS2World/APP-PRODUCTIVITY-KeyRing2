{$R-,S-,I-,V-,B-}

unit MAIN911;

interface

{$I OPDEFINE.INC}

uses
  Dos,
  OpInline,
  OpString,
  OpRoot,
  OpCrt,
  OpColor,
  {$IFDEF UseMouse}
  OpMouse,
  {$ENDIF}
  OpAbsFld,
  OpCmd,
  OpField,
  OpFrame,
  OpWindow,
  OpSelect,
  OpEntry;

{Entry field constants}
const
  idFName                = 0;
  idPW                   = idFName + 1;

{Help index constants}
const
  hiFName                = 1;
  hiPW                   = hiFName + 1;

type
  UserRecord =
    record
      FName                : string[254];
      PW                   : string[254];
    end;

function InitEntryScreen(var ES : EntryScreen;
                         var UR : UserRecord;
                         var EsColors : ColorSet) : Word;
  {-Initialize entry screen generated by MAKESCRN}

procedure InitUserRecord(var UR : UserRecord);
  {-Initialize user record}

  {===========================================================}

implementation

procedure InitUserRecord(var UR : UserRecord);
begin
  FillChar(UR, SizeOf(UR), 0);
end;

function InitEntryScreen(var ES : EntryScreen;
                         var UR : UserRecord;
                         var EsColors : ColorSet) : Word;
const
  Frame1 = 'ÉÈ»¼ÍÍºº';
  WinOptions = wBordered+wClear+wUserContents;
begin
  with ES do begin
    if not InitCustom(4, 3, 77, 22, EsColors, WinOptions) then begin
      InitEntryScreen := InitStatus;
      Exit;
    end;

    wFrame.SetFrameType(Frame1);
    EnableExplosions(15);
    wFrame.AddHeader(' Emergency Password Viewer ', heTC);
    SetWrapMode(WrapAtEdges);

    AddLineField('Ä', 'Ä', 'Ä', 3, 2, 72, False);

  {idFName:}
    esFieldOptionsOn(efRequired);
    AddStringField(
      'PWX File Name:', 1, 2, 
      CharStr('X', 254), 1, 17, 55, 
      hiFName, UR.FName);
    esFieldOptionsOff(efRequired);

  {idPW:}
    AddStringField(
      'Password:', 2, 2, 
      CharStr('X', 254), 2, 17, 55, 
      hiPW, UR.PW);

    if RawError <> 0 then
      ES.Done;

    InitEntryScreen := RawError;
  end;
end;

end.
