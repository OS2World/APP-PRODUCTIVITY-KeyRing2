/*:VRX         Main
*/
/*  Main
*/
Main:
/*  Process the arguments.
    Get the parent window.
*/
    PARSE SOURCE . Calledas .
    Parent = ""
    Argcount = ARG()
    Argoff = 0
    IF( Calledas \= "COMMAND" )THEN DO
        IF Argcount >= 1 THEN DO
            Parent = ARG(1)
            Argcount = Argcount - 1
            Argoff = 1
        END
    END
        ELSE DO
            CALL Vroptions 'ImplicitNames'
            CALL Vroptions 'NoEchoQuit'
        END
    Initargs.0 = Argcount
    IF( Argcount > 0 )THEN DO I = 1 TO Argcount
        Initargs.i = ARG( I + Argoff )
    END
    DROP Calledas Argcount Argoff

/*  Load the windows
*/
    CALL Vrinit
    PARSE SOURCE . . Spec
    _vreprimarywindowpath = ,
        Vrparsefilename( Spec, "dpn" ) || ".VRW"
    _vreprimarywindow = ,
        Vrload( Parent, _vreprimarywindowpath )
    DROP Parent Spec
    IF( _vreprimarywindow == "" )THEN DO
        CALL Vrmessage "", Vlsmsg(78) /* Cannot load window: */ Vrerror(), ,
            Vlsmsg(79)                                      /* Error! */
        _vrereturnvalue = 32000
        SIGNAL _vreleavemain
    END

/*  Process events
*/
    CALL Init
    SIGNAL ON HALT
    DO While( \ Vrget( _vreprimarywindow, "Shutdown" ) )
        _vreevent = Vrevent()
        INTERPRET _vreevent
    END
_vrehalt:
    _vrereturnvalue = Fini()
    CALL Vrdestroy _vreprimarywindow
_vreleavemain:
    CALL Vrfini
    EXIT _vrereturnvalue

Vrloadsecondary:
    __vrlswait = ABBREV( 'WAIT', TRANSLATE(ARG(2)), 1 )
    IF __vrlswait THEN DO
        CALL Vrflush
    END
    __vrlshwnd = Vrload( Vrwindow(), Vrwindowpath(), ARG(1) )
    IF __vrlshwnd = '' THEN SIGNAL __vrlsdone
    IF __vrlswait \= 1 THEN SIGNAL __vrlsdone
    CALL Vrset __vrlshwnd, 'WindowMode', 'Modal'
    __vrlstmp = __vrlswindows.0
    IF( DATATYPE(__vrlstmp) \= 'NUM' ) THEN DO
        __vrlstmp = 1
    END
        ELSE DO
            __vrlstmp = __vrlstmp + 1
        END
    __vrlswindows.__vrlstmp = Vrwindow( __vrlshwnd )
    __vrlswindows.0 = __vrlstmp
    DO While( Vrisvalidobject( Vrwindow() ) = 1 )
        __vrlsevent = Vrevent()
        INTERPRET __vrlsevent
    END
    __vrlstmp = __vrlswindows.0
    __vrlswindows.0 = __vrlstmp - 1
    CALL Vrwindow __vrlswindows.__vrlstmp
    __vrlshwnd = ''
__vrlsdone:
RETURN __vrlshwnd

/*:VRX         CloseButton_Click
*/
Closebutton_click:
    CALL Quit
RETURN

/*:VRX         Fini
*/
Fini:
    Ok = Vrsetini( Appname, "ICONSELFONT", Vrget("IconContainer", "Font"), Ininame )
    Ok = Vrsetini( Appname, "ICONSELLEFT", Vrget( "IconSel", "Left" ), Ininame )
    Ok = Vrsetini( Appname, "ICONSELTOP", Vrget( "IconSel", "Top" ), Ininame )
    Ok = Vrsetini( Appname, "ICONSELHEIGHT", Vrget( "IconSel", "Height" ), Ininame )
    Ok = Vrsetini( Appname, "ICONSELWIDTH", Vrget( "IconSel", "Width" ), Ininame )

    Window = Vrwindow()
    CALL Vrset Window, "Visible", 0
    DROP Window
RETURN 0

/*:VRX         Halt
*/
Halt:
    SIGNAL _vrehalt
RETURN

/*:VRX         IconSel_Close
*/
Iconsel_close:
    CALL Quit
RETURN

/*:VRX         IconSel_Help
*/
Iconsel_help:
    CALL Infhelp(Vrinfo("Source"))
RETURN



/*:VRX         IconSel_LangInit
*/
IconSel_LangInit:

    /* ------------------------------------------------ */
    /* Language internationalization code autogenerated */
    /* by VXNation v1.0, Copyright 1999, IDK, Inc.      */
    /*          http://www.idk-inc.com                  */
    /* Autogenerated: 02/15/2000 19:41:49             */
    /* ------------------------------------------------ */
    /* Warning! This code gets overwritten by VXNation! */
    /* Do not make modifications here!                  */
    /* ------------------------------------------------ */

    /* KeyRing/2 Icon Selector */
    Ok = VRSet("IconSel", "WindowListTitle", VLSMsg(211))

    /* KeyRing/2 Icon Selector */
    Ok = VRSet("IconSel", "Caption", VLSMsg(211))

    /* Icons */
    Ok = VRSet("IconContainer", "Caption", VLSMsg(212))

    /* Drag one of these icons to the Editor Icon field to set its icon. */
    Ok = VRSet("IconContainer", "HintText", VLSMsg(213))

    /* Timer */
    Ok = VRSet("TM_1", "Caption", VLSMsg(66))

    /* Close */
    Ok = VRSet("CloseButton", "Caption", VLSMsg(214))

    DROP Ok

RETURN

/*:VRX         IconSel_Resize
*/
Iconsel_resize:
    Ok = Vrset( "TM_1", "Enabled", 1 )
    Ok = Vrset( "TM_1", "Delay", 500 )
    Ok = Vrset( "GB_1", "Visible", 0 )
    Ok = Vrset( "GB_2", "Visible", 0 )

    Width = Vrget( "IconSel", "Width" )
    Height = Vrget( "IconSel", "Height" )
    IF Height > 3600 THEN DO
        Gbtop = Height - 1228
        Ok = Vrset("GB_2", "Top", Gbtop)
        Gb1hyt = Height - 1751
        Ok = Vrset( "GB_1", "Height", Gb1hyt )
        Ok = Vrset( "IconContainer", "Height", Gb1hyt-241 )
    END
    IF Width > 2244 THEN DO
        Gb1w = Width - 217
        Ok = Vrset( "GB_1", "Width", Gb1w )
        Ok = Vrset("GB_2", "Width", Gb1w)
        Ok = Vrset( "IconContainer", "Width", Gb1w - 241 )
    END

    IF Lasthyt <> Height THEN DO
        Ok = Vrmethod( "IconContainer", "Arrange" )
    END
        ELSE DO
            IF Lastwid <> Width THEN DO
                Ok = Vrmethod( "IconContainer", "Arrange" )
            END
        END

    Lasthyt = Height
    Lastwid = Width

RETURN

/*:VRX         INFHelp
*/
Infhelp:
    ADDRESS Cmd 'start view kr2.inf' Vrget(ARG(1), "UserData")
RETURN

/*:VRX         Init
*/
Init:
    Ok = RXFUNCADD("VLLoadFuncs", "VLMSG", "VLLoadFuncs")/* do not modify or move this line! It must be on line #2 of this function */
    CALL Vlloadfuncs/* do not modify or move this line! It must be on line #3 of this function */

    Ok = Vrredirectstdio("On", "keyring2.err")
    Appname = Initargs.1
    Ininame = Initargs.2

    Langname = Vrgetini( Appname, "LANGUAGE", Ininame )
    IF Langname = "" THEN DO
        Langname = "ENGLISH.MSG"
    END
    Ok = Vlopenlang(Langname, Langname)

    Window = Vrwindow()
    CALL Vrmethod Window, "Activate"

    Font = Vrgetini( Appname, "ICONSELFONT", Ininame )
    IF Font <> "" THEN DO
        Ok = Vrmethod( "IconSel", "ListChildren", "ObjList." )
        DO I = 1 TO Objlist.0
            IF Vrmethod( "Application", "SupportsProperty", Objlist.i , "Font" ) = 1 THEN
                Ok = Vrset(Objlist.i, "Font", Font)
        END
    END

    Ok = Vrset( "IconContainer", "MiniIcons", 0 )
    Contname = "IconContainer"

    Iconhandle = Vrmethod( "IconContainer", "AddField", "Icon", "Icon", "IconField")

    Lastwid = 0
    Lasthyt = 0
    Height = Vrgetini( Appname, "ICONSELHEIGHT", Ininame )
    IF Height <> "" THEN DO
        Ok = Vrset( "IconSel", "Height", Height)
        Ok = Vrset( "IconSel", "Width", Vrgetini( Appname, "ICONSELWIDTH", Ininame ))
        Ok = Vrset( "IconContainer", "Font", Vrgetini( Appname, "ICONSELFONT", Ininame ) )
        Ok = Vrset( "IconSel", "Left", Vrgetini( Appname, "ICONSELLEFT", Ininame ))
        Ok = Vrset( "IconSel", "Top", Vrgetini( Appname, "ICONSELTOP", Ininame ))
    END
        ELSE do
            CALL Vrmethod Window, "CenterWindow"
	end

    CALL Iconsel_resize
    CALL Vrset Window, "Visible", 1

    DROP Window
RETURN

/*:VRX         Quit
*/
Quit:
    Ok = Vrsetini( Appname, "ICONSELHEIGHT", Vrget("IconSel", "Height"), Ininame )
    Ok = Vrsetini( Appname, "ICONSELWIDTH", Vrget("IconSel", "Width"), Ininame )
    Ok = Vrsetini( Appname, "ICONSELFONT", Vrget("IconContainer", "Font"), Ininame )
    Ok = Vrsetini( Appname, "ICONSELLEFT", Vrget("IconSel", "Left"), Ininame )
    Ok = Vrsetini( Appname, "ICONSELTOP", Vrget("IconSel", "Top"), Ininame )
    Window = Vrwindow()
    CALL Vrset Window, "Shutdown", 1
    DROP Window

RETURN

/*:VRX         TM_1_Trigger
*/
Tm_1_trigger:
    Ok = Vrset( "TM_1", "Enabled", 0 )
    Ok = Vrset( "GB_1", "Visible", 1 )
    Ok = Vrset( "GB_2", "Visible", 1 )

    Items.0 = 0
    DO I = 2 TO KRGetIconCount()
        J = I-1
        Items.j = ";" || J || ";$ " || I || ":KRICON.DLL;;;" || Iconhandle || ";$ " || I || ":KRICON.DLL;"
        Items.0 = Items.0 + 1
    END
    DROP J I

    Ok = Vrmethod( "IconContainer", "AddRecordList", , , "Items.")
    ok = VRMethod( "IconContainer", "Arrange" )
    DROP Items
RETURN


