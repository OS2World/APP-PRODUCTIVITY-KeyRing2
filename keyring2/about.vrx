/*:VRX         Main
*/
/*  Main
~nokeywords~
*/
Main:
/*  Process the arguments.
    Get the parent window.
*/
    PARSE SOURCE . Calledas .
    Parent = ""
    Argcount = ARG()
    Argoff = 0
    IF( Calledas \= "COMMAND" )THEN DO
        IF Argcount >= 1 THEN DO
            Parent = ARG(1)
            Argcount = Argcount - 1
            Argoff = 1
        END
    END
    Initargs.0 = Argcount
    IF( Argcount > 0 )THEN
        DO I = 1 TO Argcount
            Initargs.i = ARG( I + Argoff )
        END
    DROP Calledas Argcount Argoff

/*  Load the windows
*/
    CALL Vrinit
    PARSE SOURCE . . Spec
    _vreprimarywindowpath = ,
        Vrparsefilename( Spec, "dpn" ) || ".VRW"
    _vreprimarywindow = ,
        Vrload( Parent, _vreprimarywindowpath )
    DROP Parent Spec
    IF( _vreprimarywindow == "" )THEN DO
        CALL Vrmessage "", "Cannot load window: " Vrerror(), , " Error! "
        _vrereturnvalue = 32000
        SIGNAL _vreleavemain
    END

/*  Process events
*/
    CALL Init
    SIGNAL ON HALT
    DO While( \ Vrget( _vreprimarywindow, "Shutdown" ) )
        _vreevent = Vrevent()
        INTERPRET _vreevent
    END
_vrehalt:
    _vrereturnvalue = Fini()
    CALL Vrdestroy _vreprimarywindow
_vreleavemain:
    CALL Vrfini
    EXIT _vrereturnvalue

Vrloadsecondary: PROCEDURE
    Name = ARG( 1 )

    Window = Vrload( Vrwindow(), Vrwindowpath(), Name )
    CALL Vrmethod Window, "CenterWindow"
    CALL Vrset Window, "Visible", 1
    CALL Vrmethod Window, "Activate"
RETURN Window

/*:VRX         AboutQuit_Click
*/
Aboutquit_click:
    CALL Quit
RETURN

/*:VRX         AboutWindow_Close
*/
Aboutwindow_close:
    CALL Quit
RETURN

/*:VRX         AboutWindow_Create
*/
Aboutwindow_create:
RETURN

/*:VRX         AboutWindow_Help
*/
Aboutwindow_help:
    CALL Infhelp(Vrinfo("Source"))
RETURN





/*:VRX         AboutWindow_LangException
*/
AboutWindow_LangException: 

return

/*:VRX         AboutWindow_LangInit
*/
AboutWindow_LangInit:

    /* ------------------------------------------------ */
    /* Language internationalization code autogenerated */
    /* by VXNation v1.0, Copyright 1999, IDK, Inc.      */
    /*          http://www.idk-inc.com                  */
    /* Autogenerated: 03/06/2000 19:19:44             */
    /* ------------------------------------------------ */
    /* Warning! This code gets overwritten by VXNation! */
    /* Do not make modifications here!                  */
    /* ------------------------------------------------ */

    /* KeyRing/2 About/Registration */
    Ok = VRSet("AboutWindow", "WindowListTitle", VLSMsg(122))

    /* About/Registration */
    Ok = VRSet("AboutWindow", "Caption", VLSMsg(123))

    /* ~Ok */
    Ok = VRSet("AboutQuit", "Caption", VLSMsg(124))

    /* Click to exit */
    Ok = VRSet("AboutQuit", "HintText", VLSMsg(125))

    /* ~Help */
    Ok = VRSet("PB_2", "Caption", VLSMsg(27))

    /* ~Register */
    Ok = VRSet("PB_1", "Caption", VLSMsg(330))

    /* Enter your registration code and click this button */
    Ok = VRSet("PB_1", "HintText", VLSMsg(331))

    /* Timer */
    Ok = VRSet("TM_1", "Caption", VLSMsg(66))

    /* Your name */
    Ok = VRSet("FirstLast", "HintText", VLSMsg(334))

    /* Your address (if supplied) */
    Ok = VRSet("Addr1", "HintText", VLSMsg(335))

    /* Your address (if supplied) */
    Ok = VRSet("Addr2", "HintText", VLSMsg(335))

    /* Your city and state */
    Ok = VRSet("CityState", "HintText", VLSMsg(336))

    /* Your Zip/Postal Code and country */
    Ok = VRSet("PostalCountry", "HintText", VLSMsg(337))

    /* Your email address */
    Ok = VRSet("Email", "HintText", VLSMsg(338))

    /* Your 16 character registration code */
    Ok = VRSet("RegistrationCode", "HintText", VLSMsg(339))

    /* Name: */
    Ok = VRSet("DT_99", "Caption", VLSMsg(340))

    /* Addr: */
    Ok = VRSet("DT_3", "Caption", VLSMsg(341))

    /* Addr: */
    Ok = VRSet("DT_4", "Caption", VLSMsg(341))

    /* City/State: */
    Ok = VRSet("DT_6", "Caption", VLSMsg(342))

    /* Zip/Country: */
    Ok = VRSet("DT_7", "Caption", VLSMsg(343))

    /* Email: */
    Ok = VRSet("DT_8", "Caption", VLSMsg(344))

    /* Reg Code: */
    Ok = VRSet("DT_9", "Caption", VLSMsg(345))

    /* Operational limits, if any */
    Ok = VRSet("Limits", "HintText", VLSMsg(346))

    /* Limits: */
    Ok = VRSet("DT_10", "Caption", VLSMsg(347))

    /* Registered User */
    Ok = VRSet("DT_11", "Caption", VLSMsg(348))

    /* Company: */
    Ok = VRSet("DT_2", "Caption", VLSMsg(349))

    /* Your company name */
    Ok = VRSet("CompanyName", "HintText", VLSMsg(350))

    call AboutWindow_LangException
    DROP Ok

RETURN

/*:VRX         Fini
*/
Fini:
    Window = Vrwindow()
    CALL Vrset Window, "Visible", 0
    DROP Window
RETURN 0

/*:VRX         Halt
*/
Halt:
    SIGNAL _vrehalt
RETURN

/*:VRX         INFHelp
*/
Infhelp:
    ADDRESS Cmd 'start view kr2.inf' Vrget(ARG(1), "UserData")
RETURN

/*:VRX         Init
*/
Init:
    Ok = RXFUNCADD("VLLoadFuncs", "VLMSG", "VLLoadFuncs")/* do not modify or move this line! It must be on line #2 of this function */
    CALL Vlloadfuncs/* do not modify or move this line! It must be on line #3 of this function */
    Ok = Vrredirectstdio("On", "keyring2.err")

    Ok = RXFUNCADD("KRRLoadFuncs", "KREGISTR", "KRRLoadFuncs")
    CALL KRRloadfuncs

    Appname = Initargs.1
    Ininame = Initargs.2

    Langname = Vrgetini( Appname, "LANGUAGE", Ininame )
    IF Langname = "" THEN DO
        Langname = "ENGLISH.MSG"
    END

    Ok = Vlopenlang(Langname, Langname)

    Window = Vrwindow()
    CALL Vrmethod Window, "CenterWindow"
    CALL Vrset Window, "Visible", 1
    CALL Vrmethod Window, "Activate"
    DROP Window
    CALL Aboutwindow_langinit
    call PositionButtons
    Call Refresh
RETURN

/*:VRX         PB_1_Click
*/
PB_1_Click: 
    Call Refresh
return

/*:VRX         PB_2_Click
*/
PB_2_Click: 
    ADDRESS Cmd 'start view kr2.inf' 'register'
return

/*:VRX         PositionButtons
*/
PositionButtons: 

    ok = VRSet( "PB_2", "Visible", 0 )
    ok = VRSet( "PB_1", "Visible", 0 )
    
    /* Get the width of the groupbox */
    Boxwidth = VRGet( "GB_1", "Width" )

    /* Now set the register button position */

    Tw = VRGet("PB_1", "Width")

    L  = Trunc( BoxWidth - Tw - 240 , 0 )
    ok = VRSet( "PB_1", "Left", L )


    Tw = VRGet("PB_2", "Width")
    LeftHole = VRGet("AboutQuit", "Left") + VRGet("AboutQuit", "Width")
    HoleWidth = VRGet("PB_1", "Left") - LeftHole
    L = Trunc((HoleWidth / 2) - (Tw/2)) + LeftHole
    
    ok = VRSet( "PB_2", "Left", L )

    ok = VRSet( "PB_2", "Visible", 1 )
    ok = VRSet( "PB_1", "Visible", 1 )

return

/*:VRX         Quit
*/
Quit:
    Window = Vrwindow()
    CALL Vrset Window, "Shutdown", 1
    DROP Window
    Ok = KRRDropFuncs
RETURN

/*:VRX         Refresh
*/
Refresh: 
    Value = KRFN2()
    if Length(Value) > 15 then do
        parse var Value FirstLast "þ" CompanyName "þ" Addr1 "þ" Addr2 "þ" CityState "þ" PostalCountry "þ" Email "þ" RegistrationCode "þ" Limits "þ" MaxRev
    end
    else do
        FirstLast = ""
        CompanyName = ""
        Addr1 = ""
        Addr2 = ""
        CityState = ""
        PostalCountry = ""
        Email = ""
        RegistrationCode = VLSMsg(351) /* Demo Mode */
        Limits = VLSMsg(351) /* Demo Mode */
    end
    ok = VRSet( "FirstLast", "Value", FirstLast )
    ok = VRSet( "CompanyName", "Value", CompanyName )
    ok = VRSet( "Addr1", "Value", Addr1 )
    ok = VRSet( "Addr2", "Value", Addr2 )
    ok = VRSet( "CityState", "Value", CityState )
    ok = VRSet( "PostalCountry", "Value", PostalCountry )
    ok = VRSet( "Email", "Value", Email )
    ok = VRSet( "RegistrationCode", "Value", RegistrationCode)
    ok = VRSet( "Limits", "Value", Limits )
    ok = VRSet( "MaxRev", "Value", MaxRev )
return

/*:VRX         TM_1_Trigger
*/
TM_1_Trigger: 
    Value = KRFN3(7)
return

